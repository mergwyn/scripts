#!/usr/bin/env bash
declare -A location
#location['-l']='N52'
#location['-L']='W01'
#location['-z']='0'

Usage()
{
  cat <<EOF >&2
$0: <flags> 
OPTIONS:
  -s --simple Just print day/night rather than times
  -z nn       timezone, +/-UTC
  -l yy       latitude yy degrees. Negative values are South
  -L xx       longitude xx degrees. Negative values are West
  --help      This message
EOF
}

params="$(getopt -o l:L:sz: --long simple,help --name "$0" -- "$@")"
if [[ $? != 0 ]] ; then
    echo >&2 "Not implemented: $1"
    Usage
    exit 1
fi
eval set -- "$params"

while true ; do
  case "$1" in
    --simple|-s) simple=simple; shift;;
    -l|-L|-z)    location["$1"]="$2"; shift 2;;
    --help)      Usage; exit 0;;
    --)          shift; break ;;
  esac
done

# shellcheck disable=SC2046
while read -r label time ; do
  case ${label} in
  sunrise:) sunrise=${time};;
  sunset:)  sunset=${time};;
  esac
done < <(hdate -s -q $(for k in "${!location[@]}"; do printf "%s %s\n" "$k" "${location[$k]}" ; done))


if [[ -n ${simple} ]] ; then
  now=$(date +'%H:%M')
  if [[ ${sunrise} < ${now} ]] && [[ ${now} < ${sunset} ]] ; then
    echo day
  else
    echo night
  fi
else
  echo "Sunrise: $sunrise"
  echo "Sunset: $sunset"
fi
