#!/bin/bash
# this script only works if run by media!
set -o nounset
#set -o errexit

LOGLEVEL=${LOGLEVEL:-NOTICE}
sleep=${sleep:-120}
delay=${delay:-360}

here=$(dirname "$0")
me=$(basename "$0")
# shellcheck disable=1090
for function in "$here/../functions/"*.sh; do . "${function}"; done

# log to stdout or syslog
log()     { echo "$@" ; }
log_err() { >&2 echo "$@" ; }

# default values
humaxHost=humax
HumaxExport="${humaxHost}:/mnt/hd2"
NFSopts="rw,nosuid,soft,noatime,nolock,intr,rsize=131072,wsize=131072,noauto"
user=root
state=
humaxShare=/nfs/${humaxHost}
[[ -f ${humaxShare} ]] || mkdir -p "${humaxShare}"

isalive() { ping -c 1 "$1" > /dev/null 2>&1; }
ismounted() { grep -qs "$1" /proc/mounts; }

if [[ "$(whoami)" != "${user}" ]] ; then
  log_critical "$me must be run as user: ${user}"
  exit 1
fi

log_notice "watching for $humaxHost, sleep is $sleep, PPID=$PPID"
declare -i countdown=0
while true ; do
  if isalive "${humaxHost}" ; then
    if [[ ${countdown} -ge ${delay} ]] ; then
      if [[ $state != up ]] ; then
        log_notice $humaxHost is up
        if ismounted "${humaxShare}" ; then
          log_warn "${humaxShare}" is already mounted
        else
          log_notice "Mounting ${humaxShare}"
          mount -t nfs -o "${NFSopts}" "${HumaxExport}" "${humaxShare}"
          log_debug "mount ${humaxShare} returned $?"
        fi
      fi
      state=up
    else
      log_info "Waiting for $humaxHost to quiesce, countdown=$countdown"
      countdown+=${sleep}
    fi
  else
    if [[ $state != down ]] ; then 
      log_notice $humaxHost is down
      if ismounted "${humaxShare}" ; then
	log_notice umounting humax share
	umount -l "${humaxShare}"
      else
        log_warn $humaxHost changed to down but "${humaxShare}" is not mounted
      fi
      state=down
      countdown=0
    fi
  fi
  sleep "$sleep"
done
log_notice "Complete"
