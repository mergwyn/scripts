#!/bin/bash
set -o nounset err


host=xteve.theclarkhome.com
# shellcheck source=/dev/null
for function in "$(dirname "$0")"/../functions/*.sh; do source "${function}"; done


declare -A response
log_info "$0 starting"

callapi()
{
  response=()
  _call=${1}
  log_debug "call api called with ${_call}"
  json=$(/opt/puppetlabs/puppet/bin/curl --data "{\"cmd\":\"${_call}\"}" --location --silent "http://${host}/api/."  | jq -c)
  log_debug "API response = $json"
  responsecontent=$(jq -r '. | to_entries | .[] | "[\"" + .key + "\"]=" + (.value | @sh)' <<< "$json")

  # string containing whole definition of response in bash
  responsedef="response=($responsecontent)"

  # load the definition (because values may contain LF characters, responsedef must be in double quotes)
  eval "$responsedef"

  if [[ ${#response[*]} = 0 ]]
  then
    log_error "response not set for ${_call}"
    exit 1
  fi
  [[ ${response[status]} = "true" ]]
}

runcmd()
{
  _cmd=${1}
  if callapi "${_cmd}"
  then
    log_info "${_cmd} returned ${response[status]}" 
  else
    log_error "${_cmd} failed status:${response[status]} err:${response[err]}"
    exit 1
  fi
}

runcmd update.m3u
runcmd update.xmltv
runcmd update.xepg
